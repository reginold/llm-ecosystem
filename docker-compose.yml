version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      FLASK_DEBUG: 1
      REDIS_URL: redis://redis:6379/0
      MONGO_URI: mongodb://mongodb:27017
      DB_NAME: invoice_processor
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  celery:
    build: ./backend
    command: celery -A app.celery worker --loglevel=info --pool=solo
    env_file:
      - ./backend/.env
    environment:
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - backend

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb.conf:/etc/mongod.conf
    command: ["mongod", "--config", "/etc/mongod.conf"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    environment:
      - MONGODB_LOG_LEVEL=warning
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_data: 